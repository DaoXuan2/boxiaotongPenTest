package com.wxb.datalabel.label;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class DataLabel{
    /**
     * 打标签-系列
     */
    public String series(String brand, String name, String firstChar, String secondChar, String thirdChar, String fourthChar, String mapValue){
        if (brand.isEmpty() && brand == null){
            throw new IllegalArgumentException("品牌名不能为空");
        }
        if (brand.equals("其它")){
            return "其它";
        }
        if (firstChar != null && name.contains(firstChar)){
            return mapValue;
        }
        if(name.contains(secondChar) && name.contains(thirdChar) && name.contains(fourthChar)){
            return mapValue;
        }else {
            return brand + "其它";
        }
    }

    /**
     * 提取单量
     */
    public double num(String name){
        String code = null;
        double num = 0;
        String reg = "[0-9]+[a-zA-Z毫升][a-zA-Z毫升]";
        String reg2 = "[0-9]+(\\.\\d+)?[a-zA-Z升]";
        String reg3 = "[0-9]+(\\.\\d+)?";
        Pattern p = Pattern.compile(reg);
        Matcher m = p.matcher(name);
        if(m.find()){
            code = m.group();
            if (code.contains("ml")||code.contains("mL")||code.contains("毫升")||code.contains("ML")){
                p = Pattern.compile(reg3);
                m = p.matcher(code);
                if (m.find()){
                    num = Double.parseDouble(m.group());
                }
            }
        }else{
            p = Pattern.compile(reg2);
            m = p.matcher(name);
            if (m.find()){
                code = m.group();
                p= Pattern.compile(reg3);
                m = p.matcher(code);
                if (m.find()){
                    num = Double.parseDouble(m.group()) * 1000;
                }
            }
        }
        if (code == null){
            return num;
        }
        return num;
    }

    /**
     * 获取到手最低价格
     */
    public double price(int price, String info){
        int originPrice = 0;
        int discount = 0;
        int newPrice = 0;
        List<Integer> priceList = new ArrayList<>();

        if (info == "" && info == null){
            return price;
        }
        String reg = "满[0-9元]+减[0-9元]+";
        Pattern p = Pattern.compile(reg);
        Matcher m = p.matcher(info);
        while (m.find()){
            Pattern p2 = Pattern.compile("[0-9]+");
            Matcher m2 = p2.matcher(m.group());
            if (m2.find()) {
                originPrice = Integer.parseInt(m2.group());
            }
            Pattern p3 = Pattern.compile("[0-9]+\\b");
            Matcher m3 = p3.matcher(m.group().replace("元", ""));
            if (m3.find()) {
                discount = Integer.parseInt(m3.group());
            }
            if (price > originPrice) {
                newPrice = price - discount;
            } else {
                newPrice = (price * (originPrice / price + 1) - discount) / (originPrice / price + 1);
            }
            priceList.add(newPrice);
        }
        if (priceList.size() == 0){
            return price;
        }else {
            return Collections.min(priceList);
        }
    }
}
